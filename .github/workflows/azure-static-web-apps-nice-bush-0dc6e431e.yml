name: Azure Static Web Apps CI/CD with Supabase Migrations

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - develop

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_DEVELOP_API_KEY }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_DEVELOP_URL }}

    steps:
      # Passo 1: Checar o repositório
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Passo 2: Instalar o Supabase CLI
      - name: Install Supabase CLI
        run: |
          mkdir -p /tmp/supabase-cli
          curl -sSL https://github.com/supabase/cli/releases/latest/download/supabase_linux_amd64.tar.gz | tar xz -C /tmp/supabase-cli
          sudo mv /tmp/supabase-cli/supabase /usr/local/bin
          rm -rf /tmp/supabase-cli

      # Passo 3: Criar arquivo config.toml dinamicamente
      - name: Configure Supabase Project
        run: |
          mkdir -p supabase
          echo "project_id = '${{ secrets.SUPABASE_PROJECT_ID }}'" > supabase/config.toml
          echo "api_key = '${{ secrets.SUPABASE_ACCESS_TOKEN }}'" >> supabase/config.toml

      # Passo 4: Mover migrações do diretório `develop` para o padrão (opcional, se necessário)
      - name: Prepare Migrations
        run: |
          mkdir -p supabase/migrations
          cp -R supabase/migrations/develop/* supabase/migrations/

      # Passo 5: Aplicar migrações diretamente
      - name: Apply Supabase Migrations
        run: |
          supabase db push

      # Passo 6: Build e deploy do Azure (caso necessário)
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_API_TOKEN_DEVELOP }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/src"  # Caminho do código da aplicação
          output_location: "."  # Diretório de conteúdo da aplicação construída
          skip_app_build: true

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_API_TOKEN_DEVELOP }}
          action: "close"
